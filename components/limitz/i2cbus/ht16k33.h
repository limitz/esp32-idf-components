#include <i2cbus.h>

#define HT16K33_B00_EN CONFIG_LMTZ_I2C_BUS0_HT16K33_0x70_EN
#define HT16K33_B01_EN CONFIG_LMTZ_I2C_BUS0_HT16K33_0x71_EN
#define HT16K33_B02_EN CONFIG_LMTZ_I2C_BUS0_HT16K33_0x72_EN
#define HT16K33_B03_EN CONFIG_LMTZ_I2C_BUS0_HT16K33_0x73_EN
#define HT16K33_B04_EN CONFIG_LMTZ_I2C_BUS0_HT16K33_0x74_EN
#define HT16K33_B05_EN CONFIG_LMTZ_I2C_BUS0_HT16K33_0x75_EN
#define HT16K33_B06_EN CONFIG_LMTZ_I2C_BUS0_HT16K33_0x76_EN
#define HT16K33_B07_EN CONFIG_LMTZ_I2C_BUS0_HT16K33_0x77_EN
#define HT16K33_B10_EN CONFIG_LMTZ_I2C_BUS1_HT16K33_0x70_EN
#define HT16K33_B11_EN CONFIG_LMTZ_I2C_BUS1_HT16K33_0x71_EN
#define HT16K33_B12_EN CONFIG_LMTZ_I2C_BUS1_HT16K33_0x72_EN
#define HT16K33_B13_EN CONFIG_LMTZ_I2C_BUS1_HT16K33_0x73_EN
#define HT16K33_B14_EN CONFIG_LMTZ_I2C_BUS1_HT16K33_0x74_EN
#define HT16K33_B15_EN CONFIG_LMTZ_I2C_BUS1_HT16K33_0x75_EN
#define HT16K33_B16_EN CONFIG_LMTZ_I2C_BUS1_HT16K33_0x76_EN
#define HT16K33_B17_EN CONFIG_LMTZ_I2C_BUS1_HT16K33_0x77_EN

#define HT16K33_B00_TYPE CONFIG_LMTZ_I2C_BUS0_HT16K33_0x70_TYPE
#define HT16K33_B01_TYPE CONFIG_LMTZ_I2C_BUS0_HT16K33_0x71_TYPE
#define HT16K33_B02_TYPE CONFIG_LMTZ_I2C_BUS0_HT16K33_0x72_TYPE
#define HT16K33_B03_TYPE CONFIG_LMTZ_I2C_BUS0_HT16K33_0x73_TYPE
#define HT16K33_B04_TYPE CONFIG_LMTZ_I2C_BUS0_HT16K33_0x74_TYPE
#define HT16K33_B05_TYPE CONFIG_LMTZ_I2C_BUS0_HT16K33_0x75_TYPE
#define HT16K33_B06_TYPE CONFIG_LMTZ_I2C_BUS0_HT16K33_0x76_TYPE
#define HT16K33_B07_TYPE CONFIG_LMTZ_I2C_BUS0_HT16K33_0x77_TYPE
#define HT16K33_B10_TYPE CONFIG_LMTZ_I2C_BUS1_HT16K33_0x70_TYPE
#define HT16K33_B11_TYPE CONFIG_LMTZ_I2C_BUS1_HT16K33_0x71_TYPE
#define HT16K33_B12_TYPE CONFIG_LMTZ_I2C_BUS1_HT16K33_0x72_TYPE
#define HT16K33_B13_TYPE CONFIG_LMTZ_I2C_BUS1_HT16K33_0x73_TYPE
#define HT16K33_B14_TYPE CONFIG_LMTZ_I2C_BUS1_HT16K33_0x74_TYPE
#define HT16K33_B15_TYPE CONFIG_LMTZ_I2C_BUS1_HT16K33_0x75_TYPE
#define HT16K33_B16_TYPE CONFIG_LMTZ_I2C_BUS1_HT16K33_0x76_TYPE
#define HT16K33_B17_TYPE CONFIG_LMTZ_I2C_BUS1_HT16K33_0x77_TYPE

#define HT16K33_BLINK_CMD 0x80       ///< I2C register for BLINK setting
#define HT16K33_DISPLAYON 0x01       ///< I2C value for steady on
#define HT16K33_BLINK_OFF 0          ///< I2C value for steady off
#define HT16K33_BLINK_2HZ 1          ///< I2C value for 2 Hz blink
#define HT16K33_BLINK_1HZ 2          ///< I2C value for 1 Hz blink
#define HT16K33_BLINK_HALFHZ 3       ///< I2C value for 0.5 Hz blink
#define HT16K33_CMD_BRIGHTNESS 0xE0 ///< I2C register for BRIGHTNESS setting

enum
{
	HT16K33_TYPE_NONE = -1,
	HT16K33_TYPE_OTHER = 0,
	HT16K33_TYPE_NUMERIC_X4 = 1,
	HT16K33_TYPE_NUMERIC_X4L = 2,
	HT16K33_TYPE_ALPHANUMERIC_X4 = 3,
	HT16K33_TYPE_MATRIX = 4,
};

enum
{
	HT16K33_CONTENT_NONE,
	HT16K33_CONTENT_INT,
	HT16K33_CONTENT_INT_HEX,
	HT16K33_CONTENT_FLOAT,
	HT16K33_CONTENT_STRING,
	HT16K33_CONTENT_MATRIX,
};

typedef struct
{
	union {
		i2cdevice_t device;
		i2cdevice_t dev;
	};

	uint8_t brightness;
	uint8_t blinkmode;
	union {
		int32_t  intval;
		double   floatval;
		char     stringval[8];
		uint8_t  matrix[8];
	};

	int type;
	int content;

} ht16k33_t;

int ht16k33_init(ht16k33_t* self);
int ht16k33_update(ht16k33_t* self);
int ht16k33_deinit(ht16k33_t* self);

extern ht16k33_t g_ht16k33[16];
